[workspace]
members = [
    "rust/tm",
    "rust/run",
    "rust/export",
]

resolver = "2"

[profile.dev]
debug = true
incremental = true

[profile.release]
lto = true
codegen-units = 1

[workspace.lints.rust]
unused = "deny"
warnings = "deny"
unit_bindings = "deny"
trivial_casts = "deny"
if_let_rescope = "deny"
let_underscore = "deny"
keyword_idents = "deny"
linker_messages = "deny"
unreachable_pub = "deny"
unused_lifetimes = "deny"
nonstandard_style = "deny"
unused_macro_rules = "deny"
future_incompatible = "deny"
refining_impl_trait = "deny"
redundant_lifetimes = "deny"
tail_expr_drop_order = "deny"
meta_variable_misuse = "deny"
single_use_lifetimes = "deny"
trivial_numeric_casts = "deny"
impl_trait_overcaptures = "deny"
rust_2018_compatibility = "deny"
rust_2021_compatibility = "deny"
rust_2024_compatibility = "deny"
variant_size_differences = "deny"
ambiguous_negative_literals = "deny"
impl_trait_redundant_captures = "deny"

[workspace.lints.clippy]
all = "deny"
panic = "deny"
nursery = "deny"
pedantic = "deny"
get_unwrap = "deny"
ref_patterns = "deny"
str_to_string = "deny"
clone_on_ref_ptr = "deny"
same_name_method = "deny"
allow_attributes = "deny"
unwrap_in_result = "deny"
shadow_unrelated = "deny"
partial_pub_fields = "deny"
unused_trait_names = "deny"
std_instead_of_core = "deny"
if_then_some_else_none = "deny"
unneeded_field_pattern = "deny"
redundant_type_annotations = "deny"
decimal_literal_representation = "deny"

enum_glob_use = { level = "allow", priority = 1 }
must_use_candidate = { level = "allow", priority = 1 }
missing_panics_doc = { level = "allow", priority = 1 }

restriction = "deny"
blanket_clippy_restriction_lints = { level = "allow", priority = 1 }

unreachable = { level = "allow", priority = 1 }
unwrap_used = { level = "allow", priority = 1 }
print_stdout = { level = "allow", priority = 1 }
shadow_reuse = { level = "allow", priority = 1 }
as_conversions = { level = "allow", priority = 1 }
indexing_slicing = { level = "allow", priority = 1 }
integer_division = { level = "allow", priority = 1 }
else_if_without_else = { level = "allow", priority = 1 }
missing_trait_methods = { level = "allow", priority = 1 }
pattern_type_mismatch = { level = "allow", priority = 1 }
multiple_inherent_impl = { level = "allow", priority = 1 }
wildcard_enum_match_arm = { level = "allow", priority = 1 }
integer_division_remainder_used = { level = "allow", priority = 1 }

absolute_paths = { level = "allow", priority = 1 }
single_call_fn = { level = "allow", priority = 1 }
implicit_return = { level = "allow", priority = 1 }
min_ident_chars = { level = "allow", priority = 1 }
exhaustive_enums = { level = "allow", priority = 1 }
exhaustive_structs = { level = "allow", priority = 1 }
question_mark_used = { level = "allow", priority = 1 }
impl_trait_in_params = { level = "allow", priority = 1 }
std_instead_of_alloc = { level = "allow", priority = 1 }
redundant_test_prefix = { level = "allow", priority = 1 }
missing_assert_message = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
arithmetic_side_effects = { level = "allow", priority = 1 }
renamed_function_params = { level = "allow", priority = 1 }
semicolon_outside_block = { level = "allow", priority = 1 }
default_numeric_fallback = { level = "allow", priority = 1 }
separated_literal_suffix = { level = "allow", priority = 1 }
tests_outside_test_module = { level = "allow", priority = 1 }
single_char_lifetime_names = { level = "allow", priority = 1 }
missing_docs_in_private_items = { level = "allow", priority = 1 }
arbitrary_source_item_ordering = { level = "allow", priority = 1 }
missing_inline_in_public_items = { level = "allow", priority = 1 }
allow_attributes_without_reason = { level = "allow", priority = 1 }
empty_enum_variants_with_brackets = { level = "allow", priority = 1 }
